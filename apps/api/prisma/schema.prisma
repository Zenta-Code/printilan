// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Cloud Printing Service Model

model User {
  id        String   @id @default(cuid()) @map("_id")
  name      String
  email     String   @unique
  password  String
  address   String
  phone     String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Store     Store[]
  Order     Order[]
}

model Store {
  id        String      @id @default(cuid()) @map("_id")
  name      String
  address   String
  phone     String
  owner     User        @relation(fields: [ownerId], references: [id])
  ownerId   String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Printer   Printer[]
  Documents Documents[]
  Order     Order[]
  Bundling  Bundling[]
}

model Printer {
  id      String    @id @default(cuid()) @map("_id")
  brand   String
  model   String
  type    String
  status  Boolean
  pricing Pricing[]
  store   Store     @relation(fields: [storeId], references: [id])
  storeId String
}

model Documents {
  id        String   @id @default(cuid()) @map("_id")
  name      String
  type      String
  count     Int
  size      String
  color     Boolean
  price     Float
  copies    Int
  Order     Order[]
  store     Store    @relation(fields: [storeId], references: [id])
  storeId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id         String    @id @default(cuid()) @map("_id")
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  store      Store     @relation(fields: [storeId], references: [id])
  storeId    String
  document   Documents @relation(fields: [documentId], references: [id])
  documentId String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Bundling {
  id        String    @id @default(cuid()) @map("_id")
  name      String
  desc      String
  price     Pricing[]
  store     Store     @relation(fields: [storeId], references: [id])
  storeId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Pricing {
  id         String    @id @default(cuid()) @map("_id")
  name       String
  price      Float
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Printer    Printer?  @relation(fields: [printerId], references: [id])
  printerId  String?
  Bundling   Bundling? @relation(fields: [bundlingId], references: [id])
  bundlingId String?
}

enum Role {
  MAINTAINER
  SELLER
  USER
}
